# Analysis of the APS DUP data
# This was originally done in SPSS, but because SPSS is Satan's grandchild, I am doing the analysis in R
# Data cleaning was done already

# Install packages

install.packages("plyr")
library(plyr)

install.packages("dplyr")
library(dplyr)

# Data organization- keep only variables that are needed

APSDUPnew <- select(filter(APSDUP0328), c(pin,APSyn,dup_help_dup_ref,dup_en_m,prodrome,dui,DUPtotal))

### Plotting data to check normalcy -----

# Full data

boxplot(APSDUPnew$dup_help)
boxplot(APSDUPnew$dup_ref)
boxplot(APSDUPnew$dup_en_m)
boxplot(APSDUPnew$prodrome)
boxplot(APSDUPnew$dui)
boxplot(APSDUPnew$DUPtotal)

# APS = 1

APSy <- select(filter(APSDUPnew, APSyn == 1), c(pin,APSyn,dup_help,dup_ref,dup_en_m,prodrome,dui,DUPtotal))

boxplot(APSy$dup_help)
boxplot(APSy$dup_ref)
boxplot(APSy$dup_en_m)
boxplot(APSy$prodrome)
boxplot(APSy$dui)
boxplot(APSy$DUPtotal)

#APS = 0

APSn <- select(filter(APSDUPnew, APSyn == 0), c(pin,APSyn,dup_help,dup_ref,dup_en_m,prodrome,dui,DUPtotal))

boxplot(APSn$dup_help)
boxplot(APSn$dup_ref)
boxplot(APSn$dup_en_m)
boxplot(APSn$prodrome)
boxplot(APSn$dui)
boxplot(APSn$DUPtotal)

#Surprise surprise, everything is skewed as fuck

#### Log transformation of DUP variables ----
#NOTE: NA means that pre-existing error (blank), NaN means an error produced due to the formula applied



APSDUPnew$Log_duphelp <- log10(APSDUPnew$dup_help)

APSDUPnew$Log_dupref <- log10(APSDUPnew$dup_ref)

APSDUPnew$Log_dup_en_m <- log10(APSDUPnew$dup_en_m)

APSDUPnew$Log_DUPtotal <- log10(APSDUPnew$DUPtotal)

APSDUPnew$Log_prodrome <- log10(APSDUPnew$prodrome)

APSDUPnew$Log_dui <- log10(APSDUPnew$dui)

#replace strings to 0, or blank.

APSDUPnew$Log_duphelp <- gsub("-Inf", 0, APSDUPnew$Log_duphelp)

APSDUPnew$Log_dupref <- gsub("-Inf", 0, APSDUPnew$Log_dupref)
APSDUPnew$Log_dupref <- gsub("NaN", "", APSDUPnew$Log_dupref)

APSDUPnew$Log_dup_en_m <- gsub("-Inf", 0, APSDUPnew$Log_dup_en_m)
APSDUPnew$Log_dup_en_m <- gsub("NaN", "", APSDUPnew$Log_dup_en_m)

APSDUPnew$Log_DUPtotal <- gsub("-Inf", 0, APSDUPnew$Log_DUPtotal)
APSDUPnew$Log_DUPtotal <- gsub("NaN", "", APSDUPnew$Log_DUPtotal)

APSDUPnew$Log_dui <- gsub("-Inf", 0, APSDUPnew$Log_dui)
APSDUPnew$Log_dui <- gsub("NaN", "", APSDUPnew$Log_dui)

APSDUPnew$Log_prodrome <- gsub("-Inf", 0, APSDUPnew$Log_prodrome)
APSDUPnew$Log_prodrome <- gsub("NaN", "", APSDUPnew$Log_prodrome)

#convert variable back to numeric, because R will treat variable as a string

APSDUPnew$Log_duphelp <- as.numeric(APSDUPnew$Log_duphelp)
APSDUPnew$Log_dupref <- as.numeric(APSDUPnew$Log_dupref)
APSDUPnew$Log_dup_en_m <- as.numeric(APSDUPnew$Log_dup_en_m)
APSDUPnew$Log_DUPtotal <- as.numeric(APSDUPnew$Log_DUPtotal)
APSDUPnew$Log_dui <- as.numeric(APSDUPnew$Log_dui)
APSDUPnew$Log_prodrome <- as.numeric(APSDUPnew$Log_prodrome)

#run summaries to make sure this worked.

summary(APSDUPnew$Log_duphelp)

##### Descriptive statistics ----

# Number of participants per group

APSfreqtable <- table(APSDUPnew$APSyn)
APSfreqtable

# Mean and SDS per group

describeBy(APSDUPnew, APSDUPnew$APSyn)

##### Independent samples t-test--------

#Make sure APSyn is categorical

APSDUPnew$APSyn <- factor(APSDUPnew$APSyn, labels = c("yes", "no"))
x <- APSDUPnew$APSyn
y <- APSDUPnew$Log_dui
t.test(y~x)

######## Results ###########

> x <- APSDUPnew$APSyn
Warning message:
Unknown or uninitialised column: 't.test'. 
> y <- APSDUPnew$Log_duphelp
> APSDUPnew$APSyn <- factor(APSDUPnew$APSyn, labels = c("yes", "no"))
> x <- APSDUPnew$APSyn
> y <- APSDUPnew$Log_duphelp
> t.test(y~x)

	Welch Two Sample t-test

data:  y by x
t = -2.8546, df = 281.12, p-value = 0.00463
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.39655568 -0.07286167
sample estimates:
mean in group yes  mean in group no 
        0.6096805         0.8443892 

> y <- APSDUPnew$Log_dupref
Warning message:
Unknown or uninitialised column: 't.test'. 
> t.test(y~x)

	Welch Two Sample t-test

data:  y by x
t = -0.20833, df = 236.25, p-value = 0.8352
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.210506  0.170243
sample estimates:
mean in group yes  mean in group no 
        0.3423829         0.3625144 

> y <- APSDUPnew$Log_dup_en_m
Warning message:
Unknown or uninitialised column: 't.test'. 
> t.test(y~x)

	Welch Two Sample t-test

data:  y by x
t = 0.793, df = 136.28, p-value = 0.4292
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.09262147  0.21663521
sample estimates:
mean in group yes  mean in group no 
        0.3268527         0.2648458 

> y <- APSDUPnew$Log_DUPtotal
Warning message:
Unknown or uninitialised column: 't.test'. 
> t.test(y~x)

	Welch Two Sample t-test

data:  y by x
t = -1.7664, df = 253.39, p-value = 0.07853
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.30271263  0.01644504
sample estimates:
mean in group yes  mean in group no 
         1.016905          1.160039 

> y <- APSDUPnew$Log_prodrome
> t.test(y~x)

	Welch Two Sample t-test

data:  y by x
t = -3.0942, df = 232.55, p-value = 0.002215
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.4670902 -0.1036622
sample estimates:
mean in group yes  mean in group no 
         1.209174          1.494550 

> y <- APSDUPnew$Log_dui
> t.test(y~x)

	Welch Two Sample t-test

data:  y by x
t = -2.3179, df = 213.39, p-value = 0.0214
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.31482721 -0.02545493
sample estimates:
mean in group yes  mean in group no 
         2.088782          2.258924 

#######Results of non-parametric test #####################

> A <- APSDUPnew$APSyn
> y <- APSDUPnew$dup_help
> wilcox.test(y~A)

	Wilcoxon rank sum test with continuity correction

data:  y by A
W = 13564, p-value = 0.005859
alternative hypothesis: true location shift is not equal to 0

> y <- APSDUPnew$dup_ref
> wilcox.test(y~A)

	Wilcoxon rank sum test with continuity correction

data:  y by A
W = 16018, p-value = 0.8696
alternative hypothesis: true location shift is not equal to 0

> y <- APSDUPnew$dup_en_m
> wilcox.test(y~A)

	Wilcoxon rank sum test with continuity correction

data:  y by A
W = 14798, p-value = 0.3721
alternative hypothesis: true location shift is not equal to 0

> y <- APSDUPnew$DUPtotal
> wilcox.test(y~A)

	Wilcoxon rank sum test with continuity correction

data:  y by A
W = 13950, p-value = 0.08013
alternative hypothesis: true location shift is not equal to 0

> y <- APSDUPnew$prodrome
> wilcox.test(y~A)

	Wilcoxon rank sum test with continuity correction

data:  y by A
W = 13142, p-value = 0.003138
alternative hypothesis: true location shift is not equal to 0

> y <- APSDUPnew$dui
Warning message:
Unknown or uninitialised column: 'wilcox.test'. 
> wilcox.test(y~A)

	Wilcoxon rank sum test with continuity correction

data:  y by A
W = 13206, p-value = 0.04638
alternative hypothesis: true location shift is not equal to 0
