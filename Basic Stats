#This is code for basic stats in R
#Stats is run on Chronic Stress excel sheet
#First import data file and create new R script

#Determine basic statistics- here are some available functions and packages that can do this:

summary(stress)

#sapply function

sapply(stress, sd) #or input any other parameter, like mean, median, etc

#Pastecs package 

install.packages("pastecs")
library(pastecs)
stat.desc(stress)

#Psych package

install.packages("psych")
library(psych)
describe(stress)

#If you want to split your descriptives based on group (using the psych package)

describeBy(stress, stress$Sex.f)

#Counting frequency for categorical variables

count(stress$Sex) #$ symbol singles out a variable in your data frame. Here, it means data from stress, only Sex

#Correlation between Chronic stress and BDI scores
# Need to use cor(x, y) format
#First define x and y

x <- stress$'Chronic Stress'
y <- stress$'BDI score'

#Then call the cor(x, y) command

cor(x, y)

#Now check that the correlation is significant:

cor.test(x, y)

#Could be cool to make a scatterplot of that relationship, and add a fit line for shits and gigs

plot(x, y)
abline(lm(x, y~x), col="red")

#Now regress these fuckers

fit <- lm(y~x, data = stress) #defines the model
summary(fit) #provides the results

#Conclusion: chronic stress significantly predicts BDI scores, such that as stress goes up, so does BDI

#Maybe gender is a confounder? Run t-tests to see if stress and BDI is different across gender

#T-test between sex and stress
stress$Sex.f <- factor(stress$Sex, labels = c("male", "female")) #turns Sex into categorical variable
x <- stress$Sex.f
y <- stress$'Chronic Stress'
t.test(y~x)

#T-test between sex and BDI
x <- stress$Sex.f
y <- stress$'BDI score'
t.test(y~x)

# Categorical variable transformation extracted from sofiamdanna's code

#Even though in the data there is no evidence that could suggest gender being a confounder
#Here is how you could analyze covariance anyways:

xx <- stress$Sex.f
x <- stress$'Chronic Stress'
y <- stress$'BDI score'
fit2 <- lm(y~x + xx, data = stress) #defines a new model where gender is added as a covariate (use + sign)
summary(fit2)

#Then you can compare the two models to see if they are significantly different

anova(fit, fit2)

#Can run the same stuff on age as the confounder as well, except I did correlations instead of t-tests


#To delete variable in R:

Data$Var1 <- NULL

helpful link: https://datascienceplus.com/create-new-variable-in-r/

#To replace values:

Data$Var1 <- gsub("string", "replacement", Data$Var1)

#Then change value to numeric:
#R will treat the replacement as a string, and therefore will treat the whole variable as a string. To check run summary on the variable

APSDUPnew$Log_duphelp <- as.numeric(APSDUPnew$Log_duphelp)

## Note: if you want to create a new variable and have it be inputted into your database, link the new variable to the data frame:

Data$NewVariable <- 

helpful link for non-parametric tests:

https://www.statmethods.net/stats/nonparametric.html

#difference in proportion (z test)

prop.test(x = c(number with characteristic in pop A, """"""" in pop B), n = c(total popA, total popB)

# example

prop.test(x = c(14, 31), n = c(22, 39))

#result:

2-sample test for equality of proportions with
	continuity correction

data:  c(14, 31) out of c(22, 39)
X-squared = 1.099, df = 1, p-value = 0.2945
alternative hypothesis: two.sided
95 percent confidence interval:
 -0.4316824  0.1146661
sample estimates:
   prop 1    prop 2 
0.6363636 0.7948718 


z.prop = function(x1,x2,n1,n2){
  numerator = (x1/n1) - (x2/n2)
  p.common = (x1+x2) / (n1+n2)
  denominator = sqrt(p.common * (1-p.common) * (1/n1 + 1/n2))
  z.prop.ris = numerator / denominator
  return(z.prop.ris)
}

z.prop(44, 4, 88, 16)
